model1 : 요청을 jsp 가 접수, 응답도 jsp 에서 생성
		비지니스 로직(model)이 jsp(view)안에서 호출된다.
		만약 다른 jsp(view) 에서도 동일한 비즈니스 로직(model) 을 사용할 경우
		비즈니스 로직의 변경시 많은 코드 수정이 동반된다. => 유지 보수의 어려움 
		
model2 : 요청을 servlet 에서 접수/ 요청을 jsp 에서 생성 
비즈니스 로직(model) 이 jsp 가 아니라 servlet 에서 호출한다. 


mvc 패턴 : Model - view - Controller 
	각 역할을 담당하는 객체를 분리한다.
	controller : 요청을 접수, 비즈니스 로직을 호출 및 저장(scope)
	Model : 비즈니스 로직 처리
	View : 화면 출력을 담당
	
	model1 과 다르게 view 와 model 을 분리
	view 에서 필요한 데이터는 scope 객체를 통해 받는다. 
Front Controller : 모든 요청을 하나의 객체가 접수 받는 형태
장점은 ? 


